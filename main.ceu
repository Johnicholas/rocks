#include "c.ceu"
#include "sdl.ceu"
#include "sdl-gfx.ceu"
#include "sdl-colors.ceu"

input void SDL_QUIT;
input int SDL_DT;
input void SDL_REDRAW;
native @nohold _snprintf();

native do
  SDL_Renderer* REN = NULL;

  // TODO: map
  #define MAPLENGTH 10
  SDL_Texture* SDL_text2texture(SDL_Renderer* ren, TTF_Font* font, char* text, SDL_Color* fg) {
    SDL_Surface* s = TTF_RenderText_Blended(font, text, *fg);
    SDL_Texture* t = SDL_CreateTextureFromSurface(ren, s);
    SDL_FreeSurface(s);
    return t;
  }
end
native @nohold _SDL_text2texture();

class Sprite with
  var int x;
  var int y;
  var int width;
  var int height;
  var bool immovable = false;
do
  var _SDL_Rect r;
  r.x = this.x;
  r.y = this.y;
  r.w = this.width;
  r.h = this.height;

  every SDL_REDRAW do
    _SDL_SetRenderDrawColor(_REN, 255, 255, 255, 255);
    _SDL_RenderFillRect(_REN, &r);
    _SDL_RenderDrawRect(_REN, &r);
  end
end

class Group with
  // nothing?
do
  // nothing?
end

class Text with
  var int x;
  var int y;
  var char[80] content;
  // style?
do
  var _SDL_Texture[] tex;
  finalize
    tex = _SDL_text2texture(_REN, _FONT_BIG, this.content, &_colors.white);
  with
    _SDL_DestroyTexture(tex);
  end

  var _SDL_Rect r;
  r.x = this.x;
  r.y = this.y;
  _SDL_QueryTexture(tex, null, null, &r.w, &r.h);
  every SDL_REDRAW do
    _SDL_RenderCopy(_REN, tex, null, &r);
  end
end

// globals
var int w = 600;
var int h = 200;
var int deaths = 0;

native do
  ##include <time.h>
end
_srand(_time(null));    // initialize the game "randomizer"

var _SDL_Window* win;
finalize
  win = _SDL_CreateWindow("Block Jump", _SDL_WINDOWPOS_CENTERED, _SDL_WINDOWPOS_CENTERED, w, h, _SDL_WINDOW_SHOWN);
with
  _SDL_DestroyWindow(win);
end

finalize
  _REN = _SDL_CreateRenderer(win, -1, 0);
with
  _SDL_DestroyRenderer(_REN);
end

#include "fnts.ceu"
// #include "snds.ceu"


par/or do
  await SDL_QUIT;
with
  // redraw the background
  var _SDL_Rect r;
  r.x = 0;
  r.y = 0;
  r.w = w;
  r.h = h;
  every SDL_REDRAW do
    _SDL_SetRenderDrawColor(_REN, 155, 89, 182, 255);
    _SDL_RenderFillRect(_REN, &r);
  end
with
  // main trail
  loop do
    // play
    do
      var Sprite player with
        this.x = 80;
        this.y = h*2/3-20;
        this.height = 10;
        this.width = 10;
      end;
  
      var Group cubes with
        // nothing?
      end;
  
      var Sprite line with
        this.x = 50;
        this.y = _floor(h * 2 / 3);
        this.width = w - 100;
        this.height = 0;
        this.immovable = true;
      end;

      deaths = 0;

      var Text labelDeath with
        this.x = 100;
        this.y = h - 36;
        _snprintf(this.content, 80, "%d", deaths);
      end;

      var Text labelLevel with
        this.x = w - 100 + 0.5;
        this.y = h - 35;
        _snprintf(this.content, 80, "1/%d", _MAPLENGTH);
      end;
        

      var bool touching_down = false;
  
      every SDL_DT do
        touching_down = false;
        if player.y >= line.y - line.height/2 - player.height/2 then
          touching_down = true;
          player.y = line.y - line.height/2 - player.height/2;
        end
      end
    end
  
    // end
    do
      var Text label1 with
        this.x = w/2;
        this.y = h/2 - 20;
        _snprintf(this.content, 80, "you finished the game! :-D");
      end;
      var Text label2 with
        this.x = w/2;
        this.y = h/2 + 20;
        _snprintf(this.content, 80, "and died %d times\ncan you do better?", deaths);
      end;
    end
  end
with
  every SDL_REDRAW do
    _SDL_RenderPresent(_REN);
  end
end

escape 0;
