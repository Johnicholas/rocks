class KeyController with
    interface Controller;
    var int k_up, k_down, k_left, k_right;
    var int k_fire;
do
    par do
        var _SDL_KeyboardEvent* key;
        every key = SDL_KEYDOWN do
            if key:keysym.sym == this.k_up then
                this.ay = -500;
            else/if key:keysym.sym == this.k_down then
                this.ay =  500;
            else/if key:keysym.sym == this.k_left then
                this.ax = -500;
            else/if key:keysym.sym == this.k_right then
                this.ax =  500;
            else/if key:keysym.sym == this.k_fire then
                emit this.ok_fired;
            end
        end
    with
        var _SDL_KeyboardEvent* key;
        every key = SDL_KEYUP do
            if key:keysym.sym == this.k_up
            or key:keysym.sym == this.k_down then
                this.ay = 0;
            else/if key:keysym.sym == this.k_left
                 or key:keysym.sym == this.k_right then
                this.ax = 0;
            end
        end
    end
end

input _SDL_TouchFingerEvent* SDL_FINGERMOTION;
input _SDL_TouchFingerEvent* SDL_FINGERDOWN;
input _SDL_TouchFingerEvent* SDL_FINGERUP;

class TouchController with
    interface Controller;
    var _SDL_Rect move_r;
    var _SDL_Rect fire_r;
do
    this.ax = 0;
    this.ay = 0;

    par do
        // move
        loop do
            var _SDL_TouchFingerEvent* e1 = await SDL_FINGERDOWN;
            var int id = e1:fingerId;
            var _SDL_Point pt1;
                pt1.x = e1:x * _REN_W;
                pt1.y = e1:y * _REN_H;

            if _SDL_Rect_vs_Point(&move_r, &pt1) then
                par/or do
                    every SDL_REDRAW do
                        _filledCircleRGBA(_REN, pt1.x,pt1.y,10,
                                          0xFF,0x00,0x00,0x33);
                    end
                with
                    var _SDL_TouchFingerEvent* e2 =
                        await SDL_FINGERUP until e2:fingerId == id;
                    this.ax = 0;
                    this.ay = 0;
                with
                    var _SDL_TouchFingerEvent* e2;
                    every e2 = SDL_FINGERMOTION do
                        // TODO: bug continue
                        if e2:fingerId == id then
                            var _SDL_Point pt2;
                                pt2.x = e2:x * _REN_W;
                                pt2.y = e2:y * _REN_H;
                            if      pt2.x <= pt1.x-20 then
                                this.ax = -2*_REN_W;
                            else/if pt2.x >= pt1.x+20 then
                                this.ax =  2*_REN_W;
                            else
                                this.ax =  0;
                            end
                            if      pt2.y <= pt1.y-20 then
                                this.ay = -2*_REN_H;
                            else/if pt2.y >= pt1.y+20 then
                                this.ay =  2*_REN_H;
                            else
                                this.ay =  0;
                            end
                        end
//_printf("antes: (%d,%d) vs (%d,%d)\n", fire_r.x, fire_r.y, pt.x, pt.y);
//_printf("ACC: (%d,%d)\n", this.ax, this.ay);
                    end
                end
            end
        end
    with
        // fire
        var _SDL_TouchFingerEvent* e;
        every e = SDL_FINGERDOWN do
            var _SDL_Point pt;
                pt.x = e:x * _REN_W;
                pt.y = e:y * _REN_H;
            if _SDL_Rect_vs_Point(&fire_r, &pt) then
                emit this.ok_fired;
            end
        end
    end
end
