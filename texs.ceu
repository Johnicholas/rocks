/*
 * Global references to the images so that they can be used from anywhere in 
 * the game.
 */
native do
    SDL_Texture* TEX_BG         = NULL;     // game background
    SDL_Texture* TEX_TAP        = NULL;     // "= TAP TO START ="
    SDL_Texture* TEX_SHIP1      = NULL;     // ship in the left
    SDL_Texture* TEX_SHIP2      = NULL;     // ship in the right
    SDL_Texture* TEX_ROCK       = NULL;     // big meteor
    SDL_Texture* TEX_rock       = NULL;     // small meteor
    SDL_Texture* TEX_BONUS_LIFE = NULL;     // life bonus (+1)
    SDL_Texture* TEX_BONUS_SHIELD = NULL;   // shield bonus (S)
    SDL_Texture* TEX_BONUS_HITS = NULL;     // hit-points bonus (H)
    SDL_Texture* TEX_BONUS_FIRE = NULL;     // space fire bonus (F)
    SDL_Texture* TEX_BOMB[3];               // 3-2-1 bomb
end

/*
 * Load (and destroy) each image used in the program.
 * The "finalize" clause ensures that each image is properly destroyed on 
 * program termination.
 */

_TEX_BG = _IMG_LoadTexture(_REN, "imgs/bg.png");
    finalize with
        _SDL_DestroyTexture(_TEX_BG);
    end

_TEX_TAP = _SDL_text2texture(_REN, _FONT_BIG, "= TAP TO START =",
                             &_colors.white, null);
    finalize with
        _SDL_DestroyTexture(_TEX_TAP);
    end

_TEX_SHIP1 = _IMG_LoadTexture(_REN, "imgs/ship_1.gif");
    finalize with
        _SDL_DestroyTexture(_TEX_SHIP1);
    end

_TEX_SHIP2 = _IMG_LoadTexture(_REN, "imgs/ship_2.gif");
    finalize with
        _SDL_DestroyTexture(_TEX_SHIP2);
    end

_TEX_ROCK = _IMG_LoadTexture(_REN, "imgs/rock_big.gif");
    finalize with
        _SDL_DestroyTexture(_TEX_ROCK);
    end

_TEX_rock = _IMG_LoadTexture(_REN, "imgs/rock_small.gif");
    finalize with
        _SDL_DestroyTexture(_TEX_rock);
    end

_TEX_BONUS_LIFE = _SDL_text2texture(_REN, _FONT_SMALL, "+1",
                                    &_colors.white, null);
    finalize with
        _SDL_DestroyTexture(_TEX_BONUS_LIFE);
    end

_TEX_BONUS_SHIELD = _SDL_text2texture(_REN, _FONT_SMALL, "S",
                                    &_colors.white, null);
    finalize with
        _SDL_DestroyTexture(_TEX_BONUS_SHIELD);
    end

_TEX_BONUS_HITS = _SDL_text2texture(_REN, _FONT_SMALL, "H",
                                    &_colors.white, null);
    finalize with
        _SDL_DestroyTexture(_TEX_BONUS_HITS);
    end

_TEX_BONUS_FIRE = _SDL_text2texture(_REN, _FONT_SMALL, "F",
                                    &_colors.white, null);
    finalize with
        _SDL_DestroyTexture(_TEX_BONUS_FIRE);
    end

loop i in 3 do
    var char[5] str;
    _sprintf(str, "%d", i+1);
    _TEX_BOMB[i] = _SDL_text2texture(_REN, _FONT_SMALL, str,
                                     &_colors.white, null);
end
    finalize with
        loop i in 3 do
            _SDL_DestroyTexture(_TEX_BOMB[i]);
        end
    end

_assert(_TEX_BG         != null);
_assert(_TEX_TAP        != null);
_assert(_TEX_SHIP1      != null);
_assert(_TEX_SHIP2      != null);
_assert(_TEX_ROCK       != null);
_assert(_TEX_rock       != null);
_assert(_TEX_BONUS_LIFE != null);
_assert(_TEX_BONUS_SHIELD != null);
_assert(_TEX_BONUS_HITS != null);
_assert(_TEX_BONUS_FIRE != null);
loop i in 3 do
    _assert(_TEX_BOMB[i] != null);
end
