/*
 * Global references to the images so that they can be used from anywhere in 
 * the game.
 */
native do
    enum {
        TEX_BG         = 0,     // game background
        TEX_TAP           ,     // "= TAP TO START ="
        TEX_SHIP1         ,     // ship in the left
        TEX_SHIP2         ,     // ship in the right
        TEX_ROCK          ,     // big meteor
        TEX_rock          ,     // small meteor
        TEX_BONUS_LIFE    ,     // life bonus (+1)
        TEX_BONUS_SHIELD  ,     // shield bonus (S)
        TEX_BONUS_HITS    ,     // hit-points bonus (H)
        TEX_BONUS_FIRE    ,     // space fire bonus (F)
        TEX_MAX
    };
    SDL_Texture* TEXS[TEX_MAX];
    SDL_Texture* TEX_BOMB[3];               // 3-2-1 bomb
end

/*
 * Load (and destroy) each image used in the program.
 * The "finalize" clause ensures that each image is properly destroyed on 
 * program termination.
 */

finalize
    _TEXS[_TEX_BG] = _IMG_LoadTexture(_REN, "imgs/bg.png");
with
    _SDL_DestroyTexture(_TEXS[_TEX_BG]);
end

finalize
    _TEXS[_TEX_TAP] = _SDL_text2texture(_REN, _FONT_BIG, "= TAP TO START =",
                             &_colors.white, null);
with
    _SDL_DestroyTexture(_TEXS[_TEX_TAP]);
end

finalize
    _TEXS[_TEX_SHIP1] = _IMG_LoadTexture(_REN, "imgs/ship_1.gif");
with
    _SDL_DestroyTexture(_TEXS[_TEX_SHIP1]);
end

finalize
    _TEXS[_TEX_SHIP2] = _IMG_LoadTexture(_REN, "imgs/ship_2.gif");
with
    _SDL_DestroyTexture(_TEXS[_TEX_SHIP2]);
end

finalize
    _TEXS[_TEX_ROCK] = _IMG_LoadTexture(_REN, "imgs/rock_big.gif");
with
    _SDL_DestroyTexture(_TEXS[_TEX_ROCK]);
end

finalize
    _TEXS[_TEX_rock] = _IMG_LoadTexture(_REN, "imgs/rock_small.gif");
with
    _SDL_DestroyTexture(_TEXS[_TEX_rock]);
end

finalize
    _TEXS[_TEX_BONUS_LIFE] = _SDL_text2texture(_REN, _FONT_SMALL, "+1",
                                        &_colors.white, null);
with
    _SDL_DestroyTexture(_TEXS[_TEX_BONUS_LIFE]);
end

finalize
_TEXS[_TEX_BONUS_SHIELD] = _SDL_text2texture(_REN, _FONT_SMALL, "S",
                                        &_colors.white, null);
with
    _SDL_DestroyTexture(_TEXS[_TEX_BONUS_SHIELD]);
end

finalize
    _TEXS[_TEX_BONUS_HITS] = _SDL_text2texture(_REN, _FONT_SMALL, "H",
                                        &_colors.white, null);
with
    _SDL_DestroyTexture(_TEXS[_TEX_BONUS_HITS]);
end

finalize
    _TEXS[_TEX_BONUS_FIRE] = _SDL_text2texture(_REN, _FONT_SMALL, "F",
                                        &_colors.white, null);
with
    _SDL_DestroyTexture(_TEXS[_TEX_BONUS_FIRE]);
end

loop i in 3 do
    var char[5] str;
    _sprintf(str, "%d", i+1);
    _TEX_BOMB[i] := _SDL_text2texture(_REN, _FONT_SMALL, str,
                                      &_colors.white, null);
                 // finalize below
end
    finalize with
        loop i in 3 do
            _SDL_DestroyTexture(_TEX_BOMB[i]);
        end
    end

loop i in _TEX_MAX do
    _assert(_TEXS[i] != null);
end
loop i in 3 do
    _assert(_TEX_BOMB[i] != null);
end
